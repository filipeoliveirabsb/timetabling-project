criação do projeto -- ok
algoritmo força bruta -- ok
resolver ausências na escala -- ok
    considerar numero de horas para o AJ -- ok
    considerar os diferentes meses do ano (28, 30, 31) -- ok
    array x número dos dias -- ok
somar horas trabalhadas por employee no dataframe -- ok
as folgas legais devem ser computadas como trabalho -- ok

calculo de media semanal -- ok
calculo de horas de ajuste -- ok

banco de horas / compensatory time off -- ok
não considerar fração de horas (round) -- ok
tratamento de erros -- ok

na geração da escala final, mostrar as ausências -- ok 
calcular o tempo de execução (performance) -- ok

refactor
    criar as classes 
        evaluateSchedule -- ok
        solver -- ok
    comentários em inglês -- ok
    otimizar o código evitando redundancias


"nesta primeira versão não nos preocupamos com as utilização do saldo do banco de horas 
para o próximo mês, mas sim com o saldo e geração de novas horas, considerando o mínimo possível."



algoritmo genetico -> não deu certo
    lib mlrose ?
    https://github.com/handcraftsman/GeneticAlgorithmsWithPython

programação linear -> não deu certo (mas cabe mais testes)

api -> https://github.com/python-curso/rest-api
interface

